// Generated by Dagger (https://dagger.dev).
package com.ml.android.challenge.di;

import com.ml.android.challenge.presentation.CharacterListViewModel;
import com.ml.android.challenge.usecases.GetAllCharactersUseCase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CharacterListModule_CharacterListViewModelProviderFactory implements Factory<CharacterListViewModel> {
  private final CharacterListModule module;

  private final Provider<GetAllCharactersUseCase> getAllCharactersUseCaseProvider;

  public CharacterListModule_CharacterListViewModelProviderFactory(CharacterListModule module,
      Provider<GetAllCharactersUseCase> getAllCharactersUseCaseProvider) {
    this.module = module;
    this.getAllCharactersUseCaseProvider = getAllCharactersUseCaseProvider;
  }

  @Override
  public CharacterListViewModel get() {
    return characterListViewModelProvider(module, getAllCharactersUseCaseProvider.get());
  }

  public static CharacterListModule_CharacterListViewModelProviderFactory create(
      CharacterListModule module,
      Provider<GetAllCharactersUseCase> getAllCharactersUseCaseProvider) {
    return new CharacterListModule_CharacterListViewModelProviderFactory(module, getAllCharactersUseCaseProvider);
  }

  public static CharacterListViewModel characterListViewModelProvider(CharacterListModule instance,
      GetAllCharactersUseCase getAllCharactersUseCase) {
    return Preconditions.checkNotNull(instance.characterListViewModelProvider(getAllCharactersUseCase), "Cannot return null from a non-@Nullable @Provides method");
  }
}
